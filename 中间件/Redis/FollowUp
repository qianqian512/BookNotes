
#### Redis支持哪些淘汰策略，分别什么场景使用。

#### 项目中如何保证缓存和数据库一致性。

### Cluster工作原理
 通过分片机制将数据分散在不同的Redis节点

### Cluster如何保证高可用
 Cluster基于Goosip协议实现了高可用，每个分片节点上线后都会想其他集群节点定时发送消息。

#### Cluster有无脑裂场景
 
###Redis作为消息队列有什么问题吗？

###想不明白一个问题，intset是一个有序数组，作为set类型的存储实现我能接受，但为什么不作为SortedSet的存储呢，大家共性都是有序啊？





###怎么区分Redis是主从还是主备？【OK】
主从主备都是异步写，通过info命令返回的clients能判断出主从还是主备？（主备也是异步写，和主从原理时一样的）
如果主备是异步写，那能保证数据一致性吗？(redis就不能保证一致性，只能保证高可用)

###一般主从模式，slave好像没有过期时间，因为过期key的删除全依赖于master(通过info查询avg_ttl字段得出结论)
###ATP全用Redis存储，怎么保证数据可靠性
  a) 作为每日优鲜电商，ATP库存虽然只记录在Redis中，且甚至没有开启AOF持久化功能；这是因为最终有微仓库存兜底
  b) 一般电商库存数量还是会落到mysql中，哪些秒杀的SKU会临时落在Redis中。

#### 其他问题【OK】
Q1 我们用的哨兵是主从，还是主备
   用的是主备，在slave上用info命令查看，发现clients是0，master上的连接个数是40+
Q2 DBA给的Redis域名是背后是用什么技术支撑的？是怎么做到底层master/slave已经切换，但上游业务无感知的？
   参考阿里云，用的是lvs+keepalived。lvs做了负载均衡，而keepalived保证了lvs里仅保留有效节点。
Q3 有了哨兵机制，那为什么还要有keepalived？
   keepalived判断节点存活方式比较粗暴，只是从OSI的3/4/5层简单探活；而Redis哨兵是针对于Redis节点探活。
   两者差别在于：如果redis节点是直接宕机挂掉，那两者都能检测出；但如果redis端口正常，请求无响应时就依赖于redis的哨兵探活。

###Redis作为注册中心有什么问题吗？【OK】
1.Redis无论是主从还是集群模式，都只能满足AP，不满足CP
2.个人感觉问题应该不大，其实作为注册中心而言，对一致性要求并不是很高。

