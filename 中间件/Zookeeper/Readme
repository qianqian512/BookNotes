
### Redis/MySQL/Zookeeper/ES 在集群模式下，分别实现了CAP的哪个特性 
Redis的主从实现了AP：Redis为了追求性能，因此在写master时，会通过异步方式写slave。
Redis的主备：和主从一样吗？
Redis的哨兵：当哨兵发现数据节点出现故障时，会
Redis集群版实现了AP：Redis官网对于集群版本也明确指出:"Redis集群不保证数据的强一致性"，其原理是基于Gossip协议实现了最终一致性，即弱一致性，但保证了可用性。
MySQL的主备实现了CP：在同步写数据时，要保证master和backup都写成功才返回，这样才能保证backup数据一致性。
MySQL的主从实现了AP：在同步写数据时，只要master成功即可给客户端一个返回，然后再异步写入slave，这样保证了高可用的吞吐量，但主从缺失了短暂的数据一致性。
ES集群实现了CP：集群采用分片思想，每份数据都在多个节点保留副本，在写入时只有全部节点都写成功了才返回，保证了数据的一致性，但牺牲了一定的吞吐量，即可用性。

### 对比ZAB协议和Gossip协议
ZAB的好处在于，元数据的读取和更新，时效性非常好，一旦元数据出现了变更，就立即更新到集中式的存储中，其它节点读取的时候就可以感知到;不好在于，所有的元数据的更新压力全部集中在一个地方，可能会导致元数据的存储有压力。
gossip 好处在于，元数据的更新比较分散，不是集中在一个地方，更新请求会陆陆续续打到所有节点上去更新，降低了压力;不好在于，元数据的更新有延时，可能导致集群中的一些操作会有一些滞后。